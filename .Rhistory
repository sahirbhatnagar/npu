# combine a character and an interger will produce what?
co <- c("a", 1)
typeof(co)
?lm
?sum
?log
log(exp(3))
c(1,2,3) + c(4,5,6)
help.start()
# Generate two random vectors of size 50
# from a standard normal distribution
x <- rnorm(50)
y <- rnorm(50)
# Plot the points (x, y)
plot(x, y)
# A histogram of x
hist(x)
x
# see the objects in your workspace
ls()
# delete the two vectors x and y
rm(x,y)
# see the contents of x
x
# see the objects in your workspace
ls()
# generate a sequence 1, 2, ..., 20.
x <- 1:20
dev.off()
# generate a sequence 1, 2, ..., 20.
x <- 1:20
x
# generate a sequence 1, 2, ..., 20.
x <- 1:20
x
# create another vector as a function of x
y <- 2 * x + 3
# create a data.frame and see its contents
dt <- data.frame(x, y)
dt
# run a linear regression and see the
# results
fit <- lm(y ~ x, data = dt)
summary(fit)
# create another vector as a function of x
y <- 2 * x + 3 +rnorm(20)
# create a data.frame and see its contents
dt <- data.frame(x, y)
dt
# run a linear regression and see the
# results
fit <- lm(y ~ x, data = dt)
summary(fit)
age <- rpois(20)
# create another vector as a function of x
y <- 2 * x + 3 +rnorm(20)
# create a data.frame and see its contents
dt <- data.frame(x, y)
# create a data.frame and see its contents
dt <- data.frame(x, y, age)
dt
# run a linear regression and see the
# results
fit <- lm(y ~ x + age, data = dt)
summary(fit)
# create a data.frame and see its contents
dt <- data.frame(x, y, age = age)
dt
# run a linear regression and see the
# results
fit <- lm(y ~ x + age, data = dt)
summary(fit)
dt
age <- rpois(20)
# create another vector as a function of x
y <- 2 * x + 3 +rnorm(20)
# create a data.frame and see its contents
dt <- data.frame(x, y, age = age)
# generate a sequence 1, 2, ..., 20.
x <- 1:20
age <- rpois(20)
age <- rpois(20, 7)
# create another vector as a function of x
y <- 2 * x + 3 +rnorm(20)
# create a data.frame and see its contents
dt <- data.frame(x, y, age = age)
dt
# run a linear regression and see the
# results
fit <- lm(y ~ x + age, data = dt)
summary(fit)
filepath <- system.file("data", "morley.tab",
package="datasets")
# importer les donnees dans un objet appeller 'mm'
mm <- read.table(filepath)
filepath
# importer les donnees dans un objet appeller 'mm'
mm <- read.table(filepath)
View(mm)
# Graphique
plot(mm$Expt, mm$Speed,
main="Speed of Light Data", xlab="Experiment No.")
# Graphique
plot(mm$Expt, mm$Speed,
main="Speed of Light Data", xlab="Experiment No.")
lung <- read.csv("lung.csv")
getwd()
lung <- read.csv("data/lung.csv")
View(lung)
mm <- read.table("data/lung.csv", sep = ",")
mm
getwd()
setwd("C:/Users/sahir/Documents/git_repositories/npu/data/")
getwd()
lung <- read.csv("data/lung.csv")
lung <- read.csv("lung.csv")
?sqrt
?log
log()
log(10)
log(10, base = 10)
?sum
matrix(c(1,2,3,4,5,6), nrow = 2, ncol = 3)
matrix(c(1,2,3,4,5,6), nrow = 2, ncol = 3, byrow = TRUE)
2+3
2+#
#
3
2+3
a <- 2+3
a
(a <- 2+3)
a = 2+3
mat <- matrix(c(1,2,3,4,5,6), nrow = 2, ncol = 3, byrow = TRUE)
mat = matrix(c(1,2,3,4,5,6), nrow = 2, ncol = 3, byrow = TRUE)
a <- 2+3
mean(a)
mean <- 2+9
mean(a)
mean
mean_2_numbers <- 2+9
# create a vectir
x <- c(a = -1, b = 2, c = 8, d = 10)
# extract by position
x[1]
# extract by name
x["c"]
# remplace the second element by 5
x[2] <- 5
x
x[1]
x[1, 2]
x["c"]
x["e"]
x[2]
x[2] <- 10
x
# create a data frame
d <- data.frame(Noms = c("Pierre", "Jean", "Jacques"),
Age = c(42, 34, 19),
Fumeur = c(TRUE, TRUE, FALSE))
d[1, ] # first row
d[ ,1] # first column
d[3,2] # third row, second column
d
d
d[1,]
d[,2]
d[,2, drop = F]
d[2,3]
x <- list(player = c("V", "C"),
score = c(10, 12))
x
x$player
x$player[1]
x$player[2]
x$player[3]
x$score[1]
x[[1]]
x[[1]][1]
# modify working directory
setwd("~/git_repositories/npu/data")
# import the files
# assign it to the 'lung' and 'admit' objects
lung <- read.csv("lung.csv")
admit <- read.table("admit.txt")
lung
lung2 <- lung[,c(2,3)]
lung2
dim(lung)
dim(lung2)
write.csv(lung2, file = "lung2.csv")
setwd("~/git_repositories/npu")
##################################
# R script pour l'atelier R
#
# Créer par Sahir, July 28th, 2015
# Updated:
# NOTE:
##################################
# importer les donnés (mtcars fait parti du library datasets, ce qui
# viens pré-installer avec R)
df <- mtcars
df <- mtcars[-1,]
# voir les variables en df
str(df)
# histogram de mpg
hist(mtcars[,"mpg"])
# régression linéaire
fit <- lm(mpg ~ disp, data=df)
# sommaire des résultat
summary(fit)
save(fit, file = "script/mtcars.RData")
# import 'mtcars.RData'
load("~/git_repositories/npu/script/mtcars.RData")
# import 'mtcars.RData'
load("~/git_repositories/npu/script/mtcars.RData")
# Graphiques des 4 diagnostiques
# du modèle linéaire
# placer dans 2 rangés et 2 colonnes
par(mfrow=c(2,2))
plot(fit)
boxplot(survey$Height ~ survey$Sex,
ylab = "Height (cm)",
col = c("lightpink","lightblue"))
# height for 237 students
# in the 'survey' data of library(MASS)
library(MASS)
# see the names of the columns
names(survey)
boxplot(survey$Height ~ survey$Sex,
ylab = "Height (cm)",
col = c("lightpink","lightblue"))
data("mtcars")
View(mtcars)
names(mtcars)
fit <- lm(mpg ~ cyl + disp, data = mtcars)
summary(fit)
fit <- lm(mpg ~ cyl + disp,
data = mtcars)
summary(fit)
demo(graphics)
dev.off()
dev.off()
demo(graphics)
dev.off()
dev.off()
# Plot vector values against the index
# equivalent to plot(mtcars[,"mpg"])
plot(mtcars$mpg, xlab = "Index", ylab = "mpg",
main = "Title")
# Scatterplot (x, y)
plot(mtcars$mpg, mtcars$disp, xlab = "mpg",
ylab = "disp", main = "mpg vs. disp")
fit <- lm(mpg ~ cyl + disp,
data = mtcars)
summary(fit)
par(mfrow=c(2,2))
plot(fit)
class(fit)
library(MASS)
data(survey)
boxplot(survey$Height ~ survey$Sex,
ylab = "Height (cm)",
col = c("lightpink","lightblue"))
boxplot(survey$Height ~ survey$Sex,
ylab = "Height (cm)",
col = c("lightpink","lightblue"))
?boxplot
pdf("boxplot_survey.pdf")
boxplot(survey$Height ~ survey$Sex,
ylab = "Height (cm)",
col = c("lightpink","lightblue"))
dev.off()
summary(mtcars)
mtcars
varinaces <- rep(0, nrow(mtcars))
apply
apply(mtcars, 1, var)
varinaces <- rep(0, nrow(mtcars))
for (i in 1:nrow(mtcars)) {
sdf <- mtcars[i,]
varinaces[i] <- var(sdf)
}
apply(mtcars, 1, FUN = function(i) sum(i) / sd(i))
apply(mtcars, 1, FUN = function(i) mean(i) / sd(i))
coef_var <- function(i) mean(i) / sd(i)
apply(mtcars, 1, FUN = coef_var)
t.test(Height ~ Sex, data = survey)
install.packages("rticles")
setwd("C:/Users/sahir/Downloads/knitr-tutorial-master/")
setwd("C:/Users/sahir/Downloads/knitr-tutorial-master/knitr-tutorial-master/001-motivating-example")
setwd("C:/Users/sahir/Downloads/knitr-tutorial-master/knitr-tutorial-master/001-motivating-example")
install.packages("formatR")
## ---- import-data ----
DT <- data.table::fread("fat-data.csv")
## ---- fig-pairs ----
pairs(~pbf1+age+weight+neck+abdomen+forearm+ wrist,data=DT,main="Simple Scatterplot Matrix of Fat data")
## ---- linear-regression ----
fit1 <- lm(pbf1~., data=DT)
texreg::texreg(fit1, digits=2,
caption='Multiple Linear Regression of the Body Fat Data',
label = "tab:results", booktabs = TRUE,
dcolumn = TRUE, single.row = TRUE, use.packages = FALSE)
summary(mtcars)
setwd("C:/Users/sahir/Downloads/knitr-tutorial-master/knitr-tutorial-master/002-minimum-working-example")
setwd("~/git_repositories/npu")
