%\documentclass[10pt,handout]{beamer}
\documentclass[11pt]{beamer}
%\documentclass[11pt, handout]{beamer}
%\usepackage{handoutWithNotes}
%\usepackage{pgfpages}
\usepackage{etex} % helps fix \newdimen error which is cause when ctable is loaded with other packages
\usepackage{comment}
\usepackage{amsmath,amsthm,amssymb}
\newtheorem{rcode}{R code}[section]
\usepackage{url}

%\usepackage[usenames]{xcolor}
\usepackage{color, colortbl}
\usepackage{tikz}
\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
\usepackage{ae}
%\usepackage{aeguill}
\usepackage{ctable}


\usetikzlibrary{shapes.geometric, arrows,shapes.symbols,decorations.pathreplacing}
\tikzstyle{startstop} = [rectangle, rounded corners, minimum width=3cm, minimum height=1cm, draw=black, fill=pinkish,text width=3.5cm]
\tikzstyle{startstop2} = [rectangle, rounded corners, minimum width=3cm, minimum height=1cm, draw=black, fill=background,text width=2.5cm]
\tikzstyle{startstop3} = [rectangle, rounded corners, minimum width=3cm, minimum height=1cm, draw=black, fill=beige,text width=3.0cm]
\tikzstyle{io} = [trapezium, trapezium left angle=70, trapezium right angle=110, minimum width=2cm, minimum height=1cm, text centered, draw=black, fill=blue!30,text width=1.5cm]
\tikzstyle{process} = [rectangle, minimum width=1cm, minimum height=1cm, text centered, draw=black, fill=orange!30,text width=2cm]
\tikzstyle{decision} = [diamond, minimum width=2cm, minimum height=1cm, text centered, draw=black, fill=green!30]
\tikzstyle{arrow} = [thick,->,>=stealth]
\tikzstyle{both} = [thick,<->,>=stealth, red]

\tikzset{myshade/.style={minimum size=.4cm,shading=radial,inner color=white,outer color={#1!90!gray}}}
\newcommand\mycirc[1][]{\tikz\node[circle,myshade=#1]{};}
\newcommand\myrect[1][]{\tikz\node[rectangle,myshade=#1]{};}
\newcommand\mystar[1][]{\tikz\node[star,star points=15,star point height=2pt,myshade=#1]{};}
\newcommand\mydiamond[1][]{\tikz\node[diamond,myshade=#1]{};}
\newcommand\myellipse[1][]{\tikz\node[ellipse,myshade=#1]{};}
\newcommand\mykite[1][]{\tikz\node[kite,myshade=#1]{};}
\newcommand\mydart[1][]{\tikz\node[dart,myshade=#1]{};}
\newcommand\mycloud[1][]{\tikz\node[cloud,myshade=#1]{};}

%\usepackage{subcaption}
\usepackage{subfig}
%\usepackage{caption}

\mode<presentation>
\usetheme{Hannover}
\usecolortheme{rose}
\setbeamertemplate{navigation symbols}{}
\setbeamertemplate{footline}[frame number]
\setbeamertemplate{caption}[numbered]
\setbeamertemplate{frametitle}[default][left]

\usepackage[]{hyperref}
\hypersetup{
    unicode=false,          
    pdftoolbar=true,        
    pdfmenubar=true,        
    pdffitwindow=false,     % window fit to page when opened
    pdfstartview={FitH},    % fits the width of the page to the window
    pdftitle={npu xian 2018},    % title
    pdfauthor={Sahir Rai Bhatnagar},     % author
    pdfsubject={Subject},   % subject of the document
    pdfcreator={Sahir Rai Bhatnagar},   % creator of the document
    pdfproducer={Sahir Rai Bhatnagar}, % producer of the document
    pdfkeywords={}, % list of keywords
    pdfnewwindow=true,      % links in new window
    colorlinks=true,       % false: boxed links; true: colored links
    linkcolor=red,          % color of internal links (change box color with linkbordercolor)
    citecolor=blue,        % color of links to bibliography
    filecolor=black,      % color of file links
    urlcolor=cyan           % color of external links
}

%\RequirePackage{color}

% define a bunch of colors
\definecolor{gray}{RGB}{110,110,110}
\definecolor{darkgray}{RGB}{100,100,100}
\definecolor{lightgray}{RGB}{200,200,200}
\definecolor{turquoise}{RGB}{81,193,188}
\definecolor{tomato}{RGB}{255,136,136}
\definecolor{mandarina}{RGB}{229,169,25}
\definecolor{foreground}{RGB}{81,141,193}
\definecolor{background}{RGB}{246,244,240}
\definecolor{highlight}{RGB}{229,169,25}
\definecolor{lowlight}{RGB}{200,200,200}
\definecolor{beige}{RGB}{255,255,240}
\definecolor{pinkish}{RGB}{255,223,247}
%\definecolor{aliceblue}{rgb}{0.94, 0.97, 1.0}
%\definecolor{antiflashwhite}{rgb}{0.95, 0.95, 0.96}

% some convenient commands
\newcommand{\code}[1]{\texttt{#1}}
\newcommand{\high}[1]{\textcolor{highlight}{#1}}
\newcommand{\low}[1]{\textcolor{lowlight}{#1}}
\newcommand{\highcode}[1]{\textcolor{highlight}{\texttt{#1}}}

\setbeamercolor{block body}{bg=beige}
\setbeamertemplate{theorems}[numbered] % so that you can number the R code theorem environments

%\setbeamercovered{highly dynamic}

\newcounter{saveenumi}
\newcommand{\seti}{\setcounter{saveenumi}{\value{enumi}}}
\newcommand{\conti}{\setcounter{enumi}{\value{saveenumi}}}


%\setbeamercolor{subtitle}{fg=turquoise}

%\pgfpagesuselayout{4 on 1}[a4paper, landscape, border shrink=5mm]
%\pgfpagesuselayout{2 on 1 with notes landscape}[a4paper, border shrink=5mm]
\begin{document}


<<setup, echo=FALSE,warning=FALSE,message=FALSE,cache=FALSE, results='hide'>>=
#options(width=60, digits=2)
set.seed(45)
opts_chunk$set(echo = TRUE, tidy = FALSE, cache = FALSE, warning = FALSE, message = FALSE)
knit_hooks$set(crop = hook_pdfcrop)
opts_template$set(
    fig.large = list(fig.width = 7, fig.height = 5, fig.align = 'center', crop = TRUE, fig.pos = 'h'),
    fig.small = list(fig.width = 6, fig.height = 4, fig.align = 'center', crop = TRUE, fig.pos = 'h'),
    fig.full = list(fig.width = 8, fig.height = 6, fig.align = 'center', crop = TRUE, fig.pos = 'h')
)
# smaller font size for chunks
#opts_chunk$set(size = 'tiny')
thm <- knit_theme$get("bclear")
knit_theme$set(thm)
options(width=78, digits = 2)
knit_hooks$set(rcode=function(before, options, envir)
{
if (before)
sprintf('\\begin{rcode}\\label{%s}', options$label)
else
'\\end{rcode}'
})

knit_hooks$set(frame=function(before, options, envir)
{
if (before)
sprintf('\\begin{frame}[fragile]\\hfill{}', options$label)
else
'\\end{frame}'
})
knitr::read_chunk("slides-packages.R")
@

<<required-packages,echo=FALSE,warning=FALSE,message=FALSE>>=
@

\title[Intro to R]{An introduction to programming in R}
%\subtitle{An introduction to programming in R}

\author[]{Sahir Bhatnagar and Yi Yang%
\thanks{\href{https://github.com/sahirbhatnagar/npu}{https://github.com/sahirbhatnagar/npu}%
}}

\date{July 8 -- 11, 2018}

%\makebeamertitle

\maketitle

\begin{comment}
\begin{frame}{Schedule for today}
\begin{itemize}
\item 10h00 : DÃ©but de l'atelier
\item 10H00 - 10H20: pause
\item 12H00 - 13H00: lunch
\item 15H00 -  15H20: pause
\item 17H00 : fin de l'atelier
\end{itemize}
\end{frame}
\end{comment}

\begin{comment}
\begin{frame}{Acknowledgements}
% \hspace*{-1.9cm}\parbox[t]{\textwidth}
%\frametitle{Acknowledgements}
\begin{columns}[c] % The "c" option specifies centered vertical alignment while the "t" option is used for top vertical alignment

\column{.45\textwidth} % Left column and width

\begin{itemize}
%\scriptsize
\item John Chambers
\item Ross Ihaka et Robert Gentleman
\item Greg Voisin
\item Dr. Vahid Partovi Nia
\item Toi
\end{itemize}

\column{.45\textwidth} % Right column and width
\begin{figure}
\includegraphics[width=0.6\columnwidth]{gerad.png}\\[2mm]
\includegraphics[width=0.6\columnwidth]{udem.png}\\[5mm]
\includegraphics[width=0.6\columnwidth]{hec.png}
%\includegraphics[width=0.7\columnwidth]{Logo-LUDMER.jpg}
\end{figure}

\end{columns}
\end{frame}
\end{comment}


\begin{frame}{Notice \#1}
\begin{itemize}
\item This is an \textbf{introduction} to the R language
\pause \item Feel free to ask quesitons
\end{itemize}
\end{frame}

\begin{frame}{Notice \#2}
\begin{figure}
\includegraphics[width=1.0\columnwidth]{affiliation.PNG}\\[5mm]
%\includegraphics[width=0.2\columnwidth]{LaTeX_logo.png}
\end{figure}

\textit{We do not have any commercial affiliations with these software}

\end{frame}

\begin{comment}
\begin{frame}{Avis \#3}

\begin{itemize}
\item Le mat\'{e}riel pour cet atelier est bas\'{e} sur plusieurs ressources
\item Voir ce lien pour une liste compl\`{e}te de r\'{e}f\'{e}rences: \href{https://github.com/sahirbhatnagar/atelier-R-GERAD}{https://github.com/sahirbhatnagar/atelier-R-GERAD}
\item Je vous sugg\`{e}re les livres de Vincent Goulet et Hadley Wickham
\end{itemize}

\begin{columns}[c] % The "c" option specifies centered vertical alignment while the "t" option is used for top vertical alignment
\column{.45\textwidth} % Left column and width
\begin{figure}
\includegraphics[width=0.8\columnwidth]{goulet.png}
\end{figure}

\column{.45\textwidth} % Right column and width
\begin{figure}
\includegraphics[width=0.6\columnwidth]{had.jpg}
\end{figure}
\end{columns}

\end{frame}
\end{comment}

\begin{frame}[plain]{Let's Begin}
\hspace*{-1.5cm}\parbox[t]{\textwidth}{
\begin{center}
\includegraphics[scale=0.71]{introR.png}
\end{center}
}
\end{frame}


\setbeamercolor{normal text}{fg=black,bg=background}
\begin{frame}[plain]
\hspace*{-1.0cm}\parbox[t]{\textwidth}{
\begin{block}{After this workshop you should be able to:}
\begin{itemize}
\item Understand, create and modify the 4 main objects in R (\code{vector, data.frame, matrix, list}) 
\item Use basic functions
\item Import a dataset from an external file
\item Create a plot
\end{itemize}
\end{block}
}
\end{frame}


\section{1. Background on the R language}

\setbeamercolor{normal text}{fg=gray,bg=black}
\begin{frame}[plain]
\hspace*{-1.0cm}\parbox[t]{\textwidth}{
 \begin{center}
  \Huge{\textcolor{white}{1. Background on the R language}}
 \end{center}
 }
\end{frame}


\setbeamercolor{normal text}{fg=black,bg=background}
\begin{frame}[plain]
\hspace*{-1.0cm}\parbox[t]{\textwidth}{
\begin{block}{Objectives of this section}
\begin{enumerate}
\item Understand the advantages of R
\item Know it's characteristics
\item Start an R session and execute some basic commands
\item Create, modify and save an R script
\end{enumerate}
\end{block}
}
\end{frame}



\setbeamercolor{normal text}{fg=gray,bg=white}
\subsection{The popularity of R}

\begin{frame}
 \begin{center}
  \Huge{\textcolor{red}{The popularity of R}}
 \end{center}
\end{frame}


\begin{frame}{The rise of popularity}

\vspace{0.1in}

\begin{center}
\includegraphics[scale=0.79]{rankings.png}
\end{center}

\vspace{0.2in}

The best programming languages in 2015 according to \href{http://spectrum.ieee.org/computing/software/the-2015-top-ten-programming-languages}{\mbox{IEEE Spectrum}} \\
\end{frame}


\begin{frame}{Number of Jobs}

\begin{center}
\includegraphics[scale=0.7]{jobs.png}
\end{center}

\vspace{0.05in}

reference: \href{http://r4stats.com/articles/popularity/}{http://r4stats.com/articles/popularity/}\\

\end{frame}



\begin{frame}{Used in many domains}

\begin{center}
\includegraphics[scale=0.7]{citeR.png}
\end{center}

\vspace{0.05in}

Published in \href{http://www.nature.com/news/programming-tools-adventures-with-r-1.16609}{\textit{Nature}}
\end{frame}


\begin{frame}{Powerful tool to analyze data}
\begin{itemize}
  \setlength\itemsep{2em}
\item Several resources for state-of-the-art statistical computing
\item Powerful graphing system
\item Integrate your R code into web applications
\item Ensure the reproducibility of your analyses
\end{itemize}
\end{frame}



\subsection{A Brief History}

\begin{frame}
 \begin{center}
  \Huge{\textcolor{red}{A Brief History}}
 \end{center}
\end{frame}


\begin{frame}{Before R there was S by John M. Chambers}
\begin{center}
\begin{figure}
\includegraphics[scale=0.7]{john.png}
\caption{S, is a language developped at Bell Laboratories in the 1970s by a group of researchers led by John M. Chambers}
\end{figure}
\end{center}
\end{frame}


\begin{frame}{Creators of R}
\begin{center}
\begin{figure}
\includegraphics[scale=0.790]{rr.png}
\caption{Inspired by S, Ross Ihaka (left) and Robert Gentleman (right) from the  University of Auckland in New Zeland launched the first version of R in 1996}
\end{figure}
\end{center}
\end{frame}


\begin{comment}
\begin{frame}{Open Source Software}
\begin{itemize}
  \setlength\itemsep{1em}
\item 1990-2010: le S a principalement \'{e}t\'{e} popularis\'{e} par une mise en oeuvre commerciale nomm\'{e}e S-PLUS
\pause \item Fin des ann\'{e}es 2000: L'utilisation de S-PLUS diminue en faveur du R, surtout dans les milieux acad\'{e}miques
\pause \item 2 raisons qui ont fortement contribu\'{e} \`{a} la perte d'influence de S-PLUS
\begin{enumerate}
\item \normalsize Disponible gratuitement
\pause \item Ouvert aux contributions de tous
\end{enumerate}
\end{itemize}
\end{frame}
\end{comment}



\subsection{Characteristics of R}

\begin{frame}
 \begin{center}
  \Huge{\textcolor{red}{Characteristics of R}}
 \end{center}
\end{frame}



\begin{frame}{Object oriented programming language}
\begin{itemize}
  \setlength\itemsep{2em}
\item This makes it easy to find and reuse the results of your analyses
\pause \item A function can complete several tasks
\end{itemize}
\end{frame}


\begin{frame}{An interpreted language}
\begin{itemize}
  \setlength\itemsep{1.2em}
\item An interpreted language: does not require compiling a program into machine-language instructions 
\item A compiled language: \code{C}, \code{C++}, \code{JAVA}
\item More accessible than a compiled language $\rightarrow$ which allows economists, ecologists, biologists, engineers, statisticians, epidemiologists, etc. to use R
\pause \item The program we run to use R is the interpreter
\pause \item This interpreter takes commands in R and it will immediately run
\pause \item Another example: \ code {Python}
\end{itemize}
\end{frame}


\begin{frame}{Open Source Software}

\begin{itemize}
  \setlength\itemsep{1.5em}
\item Active development for the creation of new tools in several fields  
\begin{itemize}
\item \href{https://cran.r-project.org/web/views/}{https://cran.r-project.org/web/views/}
\end{itemize} 
\item Easily see other people's code with GitHub 
\begin{itemize}
\item \href{http://www.r-pkg.org/}{http://www.r-pkg.org/}
\end{itemize}
\item Well-documented with a lot of free resources available on the internet
\begin{itemize}
\item \href{http://stackoverflow.com/questions/tagged/r}{stackoverflow}
\item \href{http://www.rdocumentation.org/}{http://www.rdocumentation.org/} \item \href{http://www.r-bloggers.com/}{http://www.r-bloggers.com/} 
\item \href{https://twitter.com/search?q=\%23rstats}{twitter} 
\item \href{http://blog.revolutionanalytics.com/local-r-groups.html}{R user groups}
\item \href{https://www.google.ca/}{Google}
\end{itemize}
\end{itemize}

%\begin{center}
%\begin{figure}
%\includegraphics[scale=0.35]{meta.png}
%\caption{\href{http://www.r-pkg.org/}{http://www.r-pkg.org/}}
%\end{figure}
%\end{center}

\end{frame}



\begin{frame}[fragile]{Statistical tool that optimizes the matrix approach}

\begin{itemize}
  \setlength\itemsep{2em}
\item The R language is based on the notion of vector, which simplifies mathematical calculations (not only computation but also writing)
\pause \item Reduces the use of iterative structures (loops \code{for, while}, etc.)
\end{itemize}
\pause 
<<rcode=TRUE>>=
c(1,2,3) + c(4,5,6)
@

%\begin{center}
%\begin{figure}
%\includegraphics[scale=0.35]{meta.png}
%\caption{\href{http://www.r-pkg.org/}{http://www.r-pkg.org/}}
%\end{figure}
%\end{center}

\end{frame}





\begin{frame}[fragile]{How to find help for a function}
\begin{itemize}
  \setlength\itemsep{2em}
%\item Pour l'aide g\'{e}n\'{e}ral: \texttt{help.start()} 
%\item Lorsque l'on conna\^{i}t le nom de la commande R: 
%\item \mbox{\texttt{help(nom de la fonction)}} 
\item \mbox{\texttt{?name\_of\_the\_function}}
%\item \`{A} partir des mot-cl\'{e}s: \texttt{??mot cl\'{e}}
%\begin{itemize}
%\item exemple: \code{??regression}
%\end{itemize}
%\item Toutes les commandes fournies par un package: \code{help(package=nom du package)}
%\begin{itemize}
%\item exemple: \code{help(package = datasets)}
%\end{itemize}
%\item F1 sur votre clavier 
\end{itemize}

\pause 
<<rcode=TRUE, eval=FALSE>>=
# find help for linear regression function 'lm'
?lm
@
\end{frame}


\begin{frame}{The help page - 2 main sections}
\begin{itemize}
  \setlength\itemsep{2em}
\item \textbf{Usage:} the name of the function, and all of its arguments and default values
\pause \item \textbf{Value:} the type of object returned and its contents
\end{itemize}
\end{frame}


%\begin{frame}{Clavier Mac}
%\vspace{0.1in}
%\begin{center}
%\includegraphics[scale=0.40]{mackey.jpg}
%\end{center}
%\end{frame}

%\begin{frame}{Clavier PC}
%\vspace{0.1in}
%\begin{center}
%\includegraphics[scale=0.40]{pckey.jpg}
%\end{center}
%\end{frame}



%\subsection{Bref Historique et description}





\subsection{Let's start a session}

\begin{frame}
 \begin{center}
  \Huge{\textcolor{red}{Starting a session}}
 \end{center}
\end{frame}


\begingroup
\makeatletter
\setlength{\hoffset}{-.5\beamer@sidebarwidth}
\makeatother
\begin{frame}[fragile, plain]
<<label, rcode=TRUE, eval=FALSE>>=
# Start the interface for documentation
# and navigate the different resources
help.start()

# find help for the rnorm function
?rnorm

# Get the working directory
getwd()
@
\end{frame}

%\begin{frame}[fragile, plain]
%<<rcode=TRUE, eval=FALSE>>=
%@
%\end{frame}




\begin{frame}[fragile, plain]
<<rcode=TRUE, eval=FALSE>>=
# addition
39 + 3

# substraction
58 - 16

# multiplication
6 * 7

# division
8 / 3
@
\end{frame}



\begin{frame}[fragile, plain]
<<rcode=TRUE, eval=FALSE>>=
# Generate two random vectors of size 50 
# from a standard normal distribution
x <- rnorm(50)
y <- rnorm(50)

# Plot the points (x, y)
plot(x, y)

# A histogram of x
hist(x)
@
\end{frame}


\begin{frame}[fragile, plain]
<<rcode=TRUE, eval=FALSE>>=
# to see the contents of the x vector
x

# see the objects in your workspace
ls()

# delete the two vectors x and y
rm(x,y)

# see the contents of x
x

# see the objects in your workspace
ls()
@
\end{frame}


\begin{frame}[fragile, plain]
<<rcode=TRUE, eval=FALSE>>=
# generate a sequence 1, 2, ..., 20.
x <- 1:20

# create another vector as a function of x
y <- 2 * x + 3

# create a data.frame and see its contents
dt <- data.frame(x, y)
dt

# run a linear regression and see the 
# results
fit <- lm(y ~ x, data = dt)
summary(fit)
@
\end{frame}

\endgroup


\begin{frame}[fragile, plain]
<<rcode=TRUE, eval=FALSE>>=
# The âseqâ function will generate more general sequences 
seq(from = -5, to = 10, by = 3)
seq(from = -5, length = 10)

#ârepâ repeats values
rep(1, 5) # repeat 1, 5 times
rep(1:5, 5) # repeat the vector 1,...,5,  five times
rep(1:5, each = 5) # repeat each element five times
@
\end{frame}



\begin{frame}[fragile, plain]
<<rcode=TRUE, eval=FALSE>>=
# vector arithmetic
v <- 1:12  # initialize a vector
v + 2 # add 2 to each element of the vector
v * -12:-1 # element-wise product
v + 1:3 # the shortest vector is recycled

# Generate random uniform(1,10) numbers 
v <- runif(12, min = 1, max = 10); v

# You can place the call in parentheses to see the result
( v <- runif(12, min = 1, max = 10) )
@
\end{frame}




\begin{frame}[fragile, plain]
<<rcode=TRUE, eval=FALSE>>=
# trouver le rÃ©pertoire oÃ¹ se trouve le
# jeux de donnÃ©es 'morley', qui est inclu avec
# l'installation de R
filepath <- system.file("data", "morley.tab", 
            package="datasets")

# importer les donnÃ©es dans un objet appeller 'mm'
mm <- read.table(filepath)

# Graphique 
plot(mm$Expt, mm$Speed, 
main="Speed of Light Data", xlab="Experiment No.")

# Terminer la session
q()
@
\end{frame}
\end{comment}




\section{2. Basics of R}

\setbeamercolor{normal text}{fg=gray,bg=black}
\begin{frame}[plain]
\hspace*{-1.0cm}\parbox[t]{\textwidth}{
 \begin{center}
  \Huge{\textcolor{white}{2. Basics of R}}
 \end{center}
 }
\end{frame}

\setbeamercolor{normal text}{fg=black,bg=background}
\begin{frame}[plain]
\hspace*{-1.0cm}\parbox[t]{\textwidth}{
\begin{block}{Objectives of this section}
\begin{enumerate}
\item Understand what a function is and how to use it
\item Identify the main objects in R: \code{vector, matrix, data frame} and \code{list} 
\item Create and manipulate these objects
\item Import some external datasets \code{.txt} et \code{.csv}
\item Install a \textit{package}
\end{enumerate}
\end{block}
}
\end{frame}



\setbeamercolor{normal text}{fg=gray,bg=white}


\subsection{Functions}

\begin{frame}
 \begin{center}
  \Huge{\textcolor{red}{Functions}}
 \end{center}
\end{frame}



\begin{frame}{Definition of a Function}
\begin{itemize}
 \setlength\itemsep{2em}
\item Instead of writing many repetitive lines of code, we call \textbf{functions} instead
\pause \item A function is characterised by two components
\pause 
\begin{enumerate}
\normalsize
\item It's \textbf{name}: this name allows the user to call the function
\pause \item a \textbf{list of arguments}: this is the information the function needs to return a proper result
\end{enumerate}
\end{itemize}
\end{frame}





\begin{frame}[fragile]{Function syntax}
\begin{itemize}
 \setlength\itemsep{2em}
\item You have to write the name of the function followed by two parentheses
\pause \item The required arguments between these two parentheses are what the function requires to execute it:
\begin{center}
\code{name\_of\_the\_function(arguments)}
\end{center}
\end{itemize}
\pause 
<<rcode=TRUE, tidy=FALSE, eval=FALSE>>=
# look at the help page for square root function
?sqrt

# we see that the sqrt function takes one argument
sqrt(49)
@

\end{frame}



\begin{frame}[fragile]{Optional arguments}
\begin{itemize}
 \setlength\itemsep{0.5em}
\item Certain functions have optional arguments while others have no arguments at all: \code{getwd()}) 
\pause \item The optional arguments have a default value 
\pause \item If we do not specify the optional argument, then the function will use the default, else it will use the argument value specified
\end{itemize}
\pause 

<<rcode=TRUE, tidy=FALSE, eval=FALSE, size='footnotesize'>>=
# look at the help for the logarithm function
?log

# we don't need to specify a value for the 2nd argument 
log(2)

# we can specify the second argument if we want
log(2, base = exp(1))
@

\end{frame}




\subsection{R Objects}

\begin{frame}
 \begin{center}
  \Huge{\textcolor{red}{R Objects}}
 \end{center}
\end{frame}


%\begin{frame}[<+->]{Les objets R}
%\begin{itemize}
%  \setlength\itemsep{2em}
%\item Tout dans le langage R est un objet:
%\begin{itemize}
%\item les variables contenant des donnÃ©es
%\item les fonctions, 
%\item les opÃ©rateurs, mÃªme le symbole reprÃ©sentant le nom dâun
%objet est lui-mÃªme un objet.
%\end{itemize}
%\end{itemize}
%\end{frame}




\begin{frame}{R Objects}

%\begin{itemize}
%  \setlength\itemsep{2em}
%\item Les structures de donnÃ©es peuvent Ãªtre organisÃ©es par: 
%\pause
%\begin{enumerate}
%\item leur dimension (1d, 2d, ou nd) 
%\item si elles sont homogÃ¨ne ou hÃ©tÃ©rogÃ¨ne
%\end{enumerate}
%\pause \item Cela donne lieu Ã  5 types de donnÃ©es les plus souvent utilisÃ©es %dans l'analyse des donnÃ©es:
%\end{itemize}
%\pause 
\ctable[caption={The principal R objects and their name},label=tab:table1,pos=h!,doinside=\small]{ccccc}{\tnote{all the elements have to be of the same type}\tnote[b]{the elements can be of different types}
}{
    																\FL
dimension	&  & same type\tmark	    &	& different type\tmark[b] \ML
1d & & Atomic vector & & List \NN
   & &    \code{c()} & & \code{list()} \ML
2d & & Matrix & & Data frame \NN
   & &  \code{matrix()} & & \code{data.frame()} \LL
}

\end{frame}


\begin{frame}[fragile]{\textit{Atomic vectors}}

\begin{itemize}
  \setlength\itemsep{2em}
\item In R, everything is a vector
\pause \item The function to create a vector is \code{c()} (concatenation)
\end{itemize}
\pause
<<rcode=TRUE, eval = TRUE, tidy = FALSE>>=
c(1, 2, 5)
@

\end{frame}




\begin{frame}[fragile]{\textit{Atomic vectors}}

\begin{itemize}
  \setlength\itemsep{2em}
\item Frequently used \textit{atomic vectors}: 
\begin{enumerate}
\item \textit{double} (also called \textit{numeric})
\item \textit{integer}
\item \textit{character}
\item \textit{logical}
\end{enumerate}
\end{itemize}
\pause
<<rcode=TRUE, eval = FALSE, tidy = FALSE>>=
c(1, 2.5, 4.5) # numeric
c(1L, 6L, 10L) # integer
c("these are", "characters") #character
c(TRUE, FALSE, T, F) # logical
@

\end{frame}






\begin{frame}[fragile]{Test}

\begin{itemize}
  %\setlength\itemsep{1em}
\item \code{typeof()}: to find out the type of vector
\item \code{is.character(), is.double(), is.integer(), is.logical(), is.atomic()}: for case specific types 
\end{itemize}
\pause
<<rcode=TRUE, eval = TRUE, tidy = FALSE, size = 'footnotesize'>>=
int_var <- c(1L, 6L, 10L)
typeof(int_var)
is.integer(int_var)
is.atomic(int_var)
@

\end{frame}



\begin{frame}[fragile]{Test}

<<rcode=TRUE, eval = TRUE, tidy = FALSE>>=
dbl_var <- c(1, 2.5, 4.5)
typeof(dbl_var)
is.double(dbl_var)
is.atomic(dbl_var)
@

\end{frame}


\begin{frame}[fragile]{\textit{Coercion}}

\begin{itemize}
  \setlength\itemsep{1em}
\item All the elements of an \textit{atomic vector} must be of the same type
\pause \item When you try to combine several types, it will convert everything to the most flexible type
\pause \item From least flexible to most flexible:
\begin{enumerate}
\item \textit{logical} 
\item \textit{integer} 
\item \textit{double} 
\item \textit{character}
\end{enumerate}
\end{itemize}
<<rcode=TRUE, eval = TRUE, tidy = FALSE>>=
# combine a character and an interger will produce what?
str(c("a", 1))
@
\end{frame}



\begin{frame}[fragile]{\textit{Coercion}}
\begin{itemize}
\item Most mathematical operations will convert an \textit{atomic vector} into a \textit{double} or \textit{integer}
\end{itemize}
<<rcode=TRUE, eval = TRUE, tidy = FALSE, size = 'footnotesize'>>=
x <- c(FALSE, FALSE, TRUE)
as.numeric(x)
# Number of TRUE
sum(x)
# Proportion of TRUE
mean(x)
@
\end{frame}


\begin{frame}[fragile]{\textit{List}}

\begin{itemize}
  %\setlength\itemsep{2em}
\item \textit{lists} are different from \textit{atomic vectors} because the elements will be of the same type
\item The function to create a \textit{list} is a \code{list()}
\end{itemize}
\pause
<<rcode=TRUE, eval = TRUE, tidy = FALSE, size = 'footnotesize'>>=
(x <- list(1:3, "a", c(TRUE, FALSE, TRUE), c(2.3, 5.9)))
@

\end{frame}



\begin{comment}
\begin{frame}[fragile]{Attributs}

\begin{itemize}
  %\setlength\itemsep{2em}
\item Les attributs d'un objet sont des Ã©lÃ©ments d'information additionnels liÃ©s Ã  cet objet
\item Pour chaque attribut, il existe une fonction du mÃªme nom servant Ã  extraire l'attribut correspondant dâun objet
\end{itemize}

\ctable[caption={Attributs les plus usuels d'un objet},label=tab:table1,pos=h!,doinside=\small]{ccccc}{
}{
    																\FL
Attribut	&  & Utilisation \ML
class & & affecte le comportement dâun objet \\
dim & & dimensions des matrices et tableaux \\
dimnames & & Ã©tiquettes des dimensions des matrices et tableaux \\
names & & Ã©tiquettes des Ã©lÃ©ments dâun objet\LL
}
\end{frame}
\end{comment}





\begin{frame}[fragile]{\textit{Matrix}}

\begin{itemize}
  \setlength\itemsep{1em}
\item Matrices are nothing but vectors in 2 dimensions
\pause \item Used for mathematical computations (think of linear algebra courses)
\pause \item The function to create a \textit{matrix} is \code{matrix()}
\end{itemize}
\pause
<<rcode=TRUE, eval = TRUE, tidy = FALSE, size = 'normalsize'>>=
# filled by column by defaults
matrix(c(1,2,3,4,5,6), nrow = 2, ncol = 3)
@

\end{frame}


\begin{frame}[fragile]{\textit{Matrix}}

<<rcode=TRUE, eval = TRUE, tidy = FALSE, size = 'normalsize'>>=
# automatically converted to same data type
matrix(c(1,2,3,"a","b","c"), nrow = 2, ncol = 3)
@

\end{frame}





\begin{frame}[fragile]{\textit{Data frame}}

\begin{itemize}
  \setlength\itemsep{0.5em}
\item The \textit{data frame} is a collection of vectors of different types
%\pause \item Utiliser lorsque diffÃ©rents sortes de donnÃ©es ont Ã©tÃ©s collecter sur les m\^{e}mes sujets (essaie clinique) 
\pause \item The function to create a \textit{data frame} is \code{data.frame()}
\end{itemize}
\pause
<<rcode=TRUE, eval = TRUE, tidy = FALSE, size = 'normalsize'>>=
# an 'id'  column to identify the individuals
# an 'age' column for their age
data.frame(id = c("yi","yang","zhengzin"),
           age = c(37,34,32))
@

\end{frame}




\begin{frame}[fragile]{The difference between a \textit{data frame} and a \textit{matrix}?}

\begin{itemize}
  \setlength\itemsep{2em}
  \normalsize
\item \code{matrix}: matrix calculations
%\pause \item Utiliser lorsque diffÃ©rents sortes de donnÃ©es ont Ã©tÃ©s collecter sur les m\^{e}mes sujets (essaie clinique) 
\item \code{data.frame}: all other analyses of different data types
\end{itemize}

\end{frame}




\subsection{R Commands}

\begin{frame}
 \begin{center}
  \Huge{\textcolor{red}{R Commands}}
 \end{center}
\end{frame}


\begin{frame}[fragile]{Expression and Assignment} 
\begin{enumerate}
\item An \textbf{expression} is immediately evaluated and the result is posted in the R console:
\pause
<<rcode=TRUE, eval = TRUE, tidy = TRUE>>=
2 + 3 ; pi ; cos(pi / 4)
@
\seti
\end{enumerate}

\end{frame}


\begin{frame}[fragile]{Expression and Assignment} 
\begin{enumerate}
\conti
\item When performing an \textbf{assignment}, an expression is evaluated, but the result is stored in an object and nothing is printed to the console
\begin{itemize}
\item The assignment operator is <-  
\item the two characters < and - must be placed one after another (no spaces):
\end{itemize}
\pause
<<rcode=TRUE, eval = TRUE, tidy = TRUE>>=
a <- 5
a
b <- a - 2
b
@
\seti
\end{enumerate}

\end{frame}

\begin{frame}[fragile]{Expression and Assignment} 
\begin{enumerate}
\conti
\item To create an assignment and simultaneously print its result, you can place the expression in parentheses:
\pause
<<rcode=TRUE, eval = TRUE, tidy = TRUE>>=
(a <- 2 + 3)
@
\pause \item The = is valid, but is not recommended
\begin{itemize}
\item it can cause confusion between the \code{name = value} in function calls
\end{itemize}

\end{enumerate}
\end{frame}


\begin{frame}[fragile]{Naming conventions for objects}
\begin{itemize}
  \setlength\itemsep{2em}
\item Characters are allowed for naming objects: 
\begin{enumerate}
\item lower case letters aâz 
\item upper case letters AâZ
\item numbers 0â9, 
\item the period .
\item underscore \_
\end{enumerate}
\end{itemize}

\end{frame}


\begin{frame}[fragile]{Naming conventions}
\begin{itemize}
  \setlength\itemsep{2em}
\item R is case-sensitive, which means \code{foo, Foo} and \code{FOO} are three distinct objects
\pause \item Certain names are reserved for R functions, so its best to avoid them
\begin{center}
\code{c, q, t, C, D, I, diff, length, mean, pi, range, var, sd}\\
\code{break, else, for, function, if, in, next, repeat, return, while}\\
\code{TRUE, FALSE, T, F}\\
\code{Inf, NA, NaN, NULL}
\end{center}
\end{itemize}

\end{frame}



\begin{frame}[fragile]{Indexing a \textit{vector}}
\begin{itemize}
  \setlength\itemsep{2em}
\item Indexing has two purposes
\pause \begin{enumerate}
\normalsize
\item extract elements 
\item replace elements
\end{enumerate}
\end{itemize}
\pause 
<<rcode=TRUE, eval = FALSE, tidy = FALSE>>=
# create a vectir
x <- c(a = -1, b = 2, c = 8, d = 10) 

# extract by position
x[1]

# extract by name
x["c"]

# remplace the second element by 5
x[2] <- 5
@
\end{frame}



\begin{frame}[fragile]{Indexing a \textit{data frame} and a \textit{matrix}}

\begin{itemize}
  \setlength\itemsep{2em}
\item Indexing observations by rows and columns for the \textit{data.frame} and \textit{matrix}:
\begin{center}
\code{df[row, column]}
\end{center}

\end{itemize}
\pause 
<<rcode=TRUE, eval = FALSE, tidy = FALSE, size='small'>>=
# create a data frame
d <- data.frame(Noms = c("Pierre", "Jean", "Jacques"),
Age = c(42, 34, 19),
Fumeur = c(TRUE, TRUE, FALSE))

d[1, ] # first row

d[ ,1] # first column

d[3,2] # third row, second column
@
\end{frame}




\begin{frame}[fragile]{Indexing a \textit{list}}

<<rcode=TRUE, eval = FALSE, tidy = FALSE>>=
# create a list
x <- list(player = c("V", "C"),
		  score = c(10, 12))
		  
# first element of the list
x[[1]]

# 1st element of the 2nd element of the list
x[[2]][1]
@
\end{frame}


\begin{frame}[fragile]{Import data and code}



\ctable[caption={Functions for importing data and code},label=tab:table1,pos=h!,doinside=\small]{lccc}{\tnote{value is separated by a space}\tnote[b]{each value is separated by a comma}\tnote[c]{objects in your working environment}
}{
    																\FL
        	  & files	           &	 objects\tmark[c]  &    R script\ML
import  & \code{read.table()\tmark} &       \code{load()} &   \code{source()}    \NN
          &  \code{read.csv()\tmark[b]}  &                 &                 \ML
save  & \code{write.table()} &  \code{save()} &   File -> Save As..         \NN
             & \code{write.csv()}   &    \LL
} 


\end{frame}


\begin{frame}[fragile]{Import data}
\begin{itemize}
  \setlength\itemsep{2em}
\item You must specify where the data is located on your hard drive
\begin{itemize}
\normalsize
\pause \item \code{getwd()}: to know the working directory
\pause \item \code{setwd()}: to modify the working directory
\end{itemize}
\end{itemize}
\pause 
<<rcode=TRUE, eval = FALSE, tidy = FALSE>>=
# modify working directory
setwd("~/git_repositories/npu/data")

# import the files
# assign it to the 'lung' and 'admit' objects
lung <- read.csv("lung.csv")

admit <- read.table("admit.txt")
@
\end{frame}




\begin{frame}[fragile]{Import code from an R Script}

<<rcode=TRUE, eval = FALSE, tidy = FALSE, size = 'small'>>=
# modify the working directory
setwd("~/git_repositories/npu/script")

# execute the commands of the RScript 'mtcars.R'
# and show the output
source("mtcars.R", echo = TRUE)

# save the results in an RData object
save(df, fit, file = "mtcars.RData")

# delete the R objects
rm(df, fit)

# import the R objects saved in 'mtcars.RData'
load("mtcars.RData")
@
\end{frame}




\begin{frame}[fragile]{Instal \textit{packages} in R}

\begin{itemize}
  \setlength\itemsep{1em}
\item A R \textit{\textbf{package}} is a collection of functions, data and documentation that allows a user to perform other tasks.
\item A list of these packages is available at \url{http://www.r-pkg.org/}
\end{itemize}
\pause
<<rcode=TRUE, eval = FALSE, tidy = FALSE>>=
# install packages for reproducible code
install.packages(c("knitr","rmarkdown"))

# to get access to those functions
library(knitr)
library(rmarkdown)
@
\end{frame}


\subsection{Summary}

\begin{frame}
 \begin{center}
  \Huge{\textcolor{red}{Summary}}
 \end{center}
\end{frame}




\begin{frame}{Summary of basic R commands}
 %\hspace*{-1.9cm}\parbox[t]{\textwidth}{
\begin{tikzpicture}
\node (expr) [startstop] {\code{sessionInfo()}
\code{install.packages()}
\code{library()}\textcolor{pinkish}{texxxx}
\code{setwd()}\textcolor{pinkish}{teccc}
\code{getwd()}\textcolor{pinkish}{teccc}
\code{rm()}\textcolor{pinkish}{tevvvvvvv}
\mbox{\code{ls()}\textcolor{pinkish}{tevvvvvvv}}  };
\node (fat) [startstop2, below of=expr, xshift=-.3cm, yshift=-2.0cm] {\code{c()}
\code{data.frame()}
\code{matrix()}
\code{list()}};
\node (script) [startstop3, below of=fat, xshift=.1cm, yshift=-1.5cm] {
\code{read.table()}
\code{write.table()}
\code{load()}
\code{save()}\textcolor{beige}{text}
\code{source()}};
\draw[decoration={brace,raise=5pt, amplitude=10pt},decorate,line width=1pt] 
  ([yshift=-1pt]expr.south west) -- ([yshift=1pt]expr.north west) node [black,midway,xshift=-2cm] 
{\footnotesize Working Environment};
\draw[decoration={brace,raise=5pt,amplitude=10pt},decorate,line width=1pt] 
  ([yshift=-1pt]fat.south west) -- ([yshift=1pt]fat.north west) node [black,midway,xshift=-2.6cm] 
{\footnotesize Frequently used R objects};
\draw[decoration={brace,raise=5pt,amplitude=10pt},decorate,line width=1pt] 
  ([yshift=-1pt]script.south west) -- ([yshift=1pt]script.north west) node [black,midway,xshift=-3cm] 
{\footnotesize Access to external data and scripts};
\end{tikzpicture}
%}
\end{frame}




\section{3. R Graphics}

\setbeamercolor{normal text}{fg=gray,bg=black}
\begin{frame}[plain]
\hspace*{-1.0cm}\parbox[t]{\textwidth}{
 \begin{center}
  \Huge{\textcolor{white}{3. R Graphics}}
 \end{center}
 }
\end{frame}

%\begin{comment}
\setbeamercolor{normal text}{fg=black,bg=background}
\begin{frame}[plain]
\hspace*{-1.0cm}\parbox[t]{\textwidth}{
\begin{block}{Objectives of this section}
\begin{enumerate}
\item Comprendre la syntaxe de la fonction \code{plot}
\item CrÃ©er des \code{boxplot, histogram} et \code{density} plot
\item Comment sauvegarder des graphiques
\end{enumerate}
\end{block}
}
\end{frame}



\setbeamercolor{normal text}{fg=gray,bg=white}
\subsection{La fonction plot}

\begin{frame}
 \begin{center}
  \Huge{\textcolor{red}{La fonction \code{plot}}}
 \end{center}
\end{frame}



\begin{frame}[fragile]{Introduction aux graphiques en R}
\begin{itemize}
  \setlength\itemsep{2em}
  \item R offre une variÃ©tÃ© de graphiques remarquables 
  \item Pour avoir une petite idÃ©e des possibilitÃ©s offertes, il suffit de taper la commande \code{demo(graphics)} 
\end{itemize}
\end{frame}


\begin{frame}[fragile]{La fonction \code{plot}}

\begin{itemize}
  \setlength\itemsep{2em}
\item La fonction \code{plot} peut prendre plusieurs arguments et types d'objets
\end{itemize}
\pause 
<<rcode=TRUE, eval = FALSE, tidy = FALSE>>=
# Plot des valeurs d'un vecteur contre leurs indices
# Ã©quivalent Ã  plot(mtcars[,"mpg"])
plot(mtcars$mpg, xlab = "Index", ylab = "mpg", 
    main = "Titre") 

# Graphique des couples (x, y)
plot(mtcars$mpg, mtcars$disp, xlab = "mpg", 
ylab = "disp", main = "mpg vs. disp")
@

\end{frame}


\begin{frame}[fragile]{La fonction \code{plot}}

\begin{itemize}
  \setlength\itemsep{1.5em}
\item La fonction \code{plot} peut aussi prendre un objet du modÃ¨le linÃ©aire comme argument
\pause \item Ceci est un exemple qui dÃ©montre pourquoi R est un langage orientÃ©e objet
\end{itemize}
\pause 
<<rcode=TRUE, eval = FALSE, tidy = FALSE>>=
# importer 'mtcars.RData'
load("mtcars.RData") 

# Graphiques des 4 diagnostiques
# du modÃ¨le linÃ©aire
# placer dans 2 rangÃ©s et 2 colonnes
par(mfrow=c(2,2))
plot(fit)
@

\end{frame}


\subsection{\code{histogram} et \code{boxplot}}

\begin{frame}
 \begin{center}
  \Huge{\textcolor{red}{\code{histogram} et \code{boxplot}}}
 \end{center}
\end{frame}



\begin{frame}[fragile]{La fonction \code{histogram}}

\begin{itemize}
  \setlength\itemsep{1.5em}
  \item Utile pour voir la distribution des donnÃ©es
\item Pour les donnÃ©es continues et univariÃ©es
\end{itemize}
\pause 
<<rcode=TRUE, eval = FALSE, tidy = FALSE>>=
# la taille de 237 Ã©tudiants disponibles dans le jeu
# de donnÃ©es 'survey' du library(MASS)
library(MASS) 

# voir le nom des colonnes
names(survey)

# histogram de la taille et montrer la frÃ©quence
# de chaque barre
hist(survey$Height, labels = TRUE)
@

\end{frame}





\begin{frame}[fragile]{La fonction \code{boxplot}}

\begin{itemize}
  \setlength\itemsep{2em}
\item Utile pour voir la diffÃ©rence d'une variable continue parmi plusieurs groupes
\end{itemize}
\pause 
<<rcode=TRUE, eval = FALSE, tidy = FALSE>>=
# visualiser la diffÃ©rence de taille entre les 
# hommes et les femmes dans le jeux
# de donnÃ©es 'survey' du library(MASS)

boxplot(survey$Height ~ survey$Sex, 
         ylab = "Taille (cm)",
         col = c("lightpink","lightblue"))
@

\end{frame}


\begin{frame}[fragile]{Sauvegarder les graphiques}

\begin{itemize}
  \setlength\itemsep{2em}
\item 2 fonctions principales: \code{pdf()} et \code{png()}
\item l'argument de ces fonctions est le nom du fichier dÃ©sirÃ©
\end{itemize}
\pause 
<<rcode=TRUE, eval = FALSE, tidy = FALSE>>=
# enregistrer dans le rÃ©pertoire de travail courant
pdf("boxplot_survey.pdf")
boxplot(survey$Height ~ survey$Sex, 
         ylab = "Taille (cm)")
dev.off()
@

\end{frame}



\subsection{Sommaire}

\begin{frame}
 \begin{center}
  \Huge{\textcolor{red}{Sommaire}}
 \end{center}
\end{frame}




\begin{frame}{Sommaire des commandes de graphiques}
 %\hspace*{-1.9cm}\parbox[t]{\textwidth}{
\begin{tikzpicture}
\node (expr) [startstop] {\code{plot()}
\code{hist()}\textcolor{pinkish}{texxxx}
\code{boxplot()}\textcolor{pinkish}{texxxx} };
\node (fat) [startstop2, below of=expr, xshift=-.3cm, yshift=-2.0cm] {\code{xlab}
\code{ylab}\textcolor{background}{textttt}
\code{main}\textcolor{background}{textttt}
\code{type}\textcolor{background}{textttt}
\code{col}\textcolor{background}{textttt}};
\node (script) [startstop3, below of=fat, xshift=.1cm, yshift=-1.5cm] {\code{pdf()}
\code{png()}\textcolor{beige}{textttt}
\code{dev.off()}\textcolor{beige}{textttt}}; 
\draw[decoration={brace,raise=5pt, amplitude=10pt},decorate,line width=1pt] 
  ([yshift=-1pt]expr.south west) -- ([yshift=1pt]expr.north west) node [black,midway,xshift=-3.1cm] 
{\footnotesize Fonctions pour crÃ©er les graphiques};
\draw[decoration={brace,raise=5pt,amplitude=10pt},decorate,line width=1pt] 
  ([yshift=-1pt]fat.south west) -- ([yshift=1pt]fat.north west) node [black,midway,xshift=-3.4cm] 
{\footnotesize Arguments communs pour ces fonctions};
\draw[decoration={brace,raise=5pt,amplitude=10pt},decorate,line width=1pt] 
  ([yshift=-1pt]script.south west) -- ([yshift=1pt]script.north west) node [black,midway,xshift=-3.5cm] 
{\footnotesize Fonctions pour enregistrer les graphiques};
\end{tikzpicture}
%}
\end{frame}





\section{4. Statistics}

\setbeamercolor{normal text}{fg=gray,bg=black}
\begin{frame}[plain]
\hspace*{-1.0cm}\parbox[t]{\textwidth}{
 \begin{center}
  \Huge{\textcolor{white}{4. Statistiques}}
 \end{center}
 }
\end{frame}

\setbeamercolor{normal text}{fg=gray,bg=white}

\subsection{Moyenne, Ã©cart type}

\begin{frame}
 \begin{center}
  \Huge{\textcolor{red}{Moyenne, Ã©cart type}}
 \end{center}
\end{frame}



\begin{frame}[fragile]{Moyenne, variance, Ã©cart type, minimum, maximum}

\begin{itemize}
  \setlength\itemsep{2em}
\item fonctions principales: \code{mean(), var(), sd(), min(), max()}
\pause \item la fonction \code{summary()} est utile pour calculer quelques statistiques de bases pour un \textit{data frame}
\end{itemize}
\pause 
<<rcode=TRUE, eval = FALSE, tidy = FALSE>>=
# enregistrer dans le rÃ©pertoire de travail courant
summary(mtcars)
@
\end{frame}




\begin{frame}[fragile]{La fonction \code{apply}}
\begin{itemize}
  \setlength\itemsep{1em}
\item Pour calculer des statistiques plus compliquÃ©es sur un \textit{data frame} (ou \textit{matrix}), on utilise la fonction \code{apply}
\pause \item La fonction \code{apply} sert Ã  appliquer une fonction quelconque sur une partie d'un \textit{matrix} ou \textit{data frame}
\end{itemize}


\end{frame}



\begin{frame}[fragile]{La fonction \code{apply}}
\begin{itemize}
  \setlength\itemsep{1em}
\item La syntaxe de la fonction est la suivante:
\begin{center}
\code{apply(X, MARGIN, FUN)}
\end{center}
\item \code{X}: un matrix ou data frame
\item \code{MARGIN}: 1 si l'on veut faire des calculs sur les rangÃ©es, 2 sur les colonnes
\item \code{FUN}: est la fonction Ã  appliquer
\end{itemize}
\pause 
<<rcode=TRUE, eval = FALSE, tidy = FALSE>>=
# variance par ligne
apply(mtcars, 1, var)
@


\end{frame}









\begin{frame}[fragile]{La fonction \code{apply}}
<<rcode=TRUE, eval = FALSE, tidy = FALSE>>=
# variance par colonne
apply(mtcars, 2, var)

# Ã©cart type par colonne
apply(mtcars, 2, sd)

# minimum de chaque rangÃ©e
apply(mtcars, 1, min)


# maximum de chaque rangÃ©e
apply(mtcars, 1, max)
@


\end{frame}





\subsection{Test t et analyse de variance}

\begin{frame}
 \begin{center}
  \Huge{\textcolor{red}{Test t et analyse de variance}}
 \end{center}
\end{frame}



\begin{frame}[fragile]{Test t}

\begin{itemize}
  \setlength\itemsep{1.5em}
  \item la fonction pour faire un test t est \code{t.test()}
\end{itemize}
\pause 
<<rcode=TRUE, eval = FALSE, tidy = FALSE>>=
# la taille de 237 Ã©tudiants disponible dans le jeux
# de donnÃ©es 'survey' du library(MASS)
# est-ce qu'il y a une diffÃ©rence de taille entre
# les hommes et les femmes?

t.test(Height ~ Sex, data = survey)
@

\end{frame}







\begin{frame}[fragile]{Analyse de variance}

\begin{itemize}
  \setlength\itemsep{2em}
\item La fonction pour l'analyse de variance est \code{aov}
\pause \item Prenons un jeux de donnÃ©es disponible dans R: \code{InsectSprays}
\pause \item 6 insecticides ont Ã©tÃ© testÃ©s 12 fois en culture, la rÃ©ponse observÃ©e Ã©tant le nombre d'insectes
\pause \item Le but c'est de voir s'il y a une diffÃ©rence importante entre les 6 insecticides par rapport Ã  le nombre d'insectes
\end{itemize}


\end{frame}


\begin{frame}[fragile]{Analyse de variance}

<<rcode=TRUE, eval = FALSE, tidy = FALSE>>=
# boxplot pour voir la diffÃ©rence entre
# les groupes
boxplot(InsectSprays$count ~ InsectSprays$spray)

# Les rÃ©sultats ne sont pas affichÃ©s, ceux-ci sont 
# copiÃ©s dans un objet nommÃ© aov.spray
aov.spray <- aov(count ~ spray, data = InsectSprays)

# sommaire des rÃ©sultats
summary(aov.spray)
@

\end{frame}




\subsection{ModÃ¨les linÃ©aires}

\begin{frame}
 \begin{center}
  \Huge{\textcolor{red}{ModÃ¨les linÃ©aires}}
 \end{center}
\end{frame}


\begin{frame}[fragile]{Les formules}

\begin{itemize}
  \setlength\itemsep{1.5em}
  \item Les formules reprÃ©sentent un Ã©lÃ©ment-clÃ© des analyses statistiques avec R
  \pause \item La notation utilisÃ©e est la m\^{e}me pour (presque) toutes les fonctions
  \pause \item Une formule est typiquement de la forme 
  \begin{center}
  \code{y $\sim$ model}
  \end{center} 
  \pause \begin{enumerate}
  \item \code{y}: est la rÃ©ponse analysÃ©e 
  \item \code{model}: est un ensemble de termes pour lesquels les paramÃ¨tres sont estimÃ©s
  \end{enumerate}
  \pause \item Ces termes sont sÃ©parÃ©s par des symboles arithmÃ©tiques mais qui ont ici une signification
  particuliÃ¨re: \code{a+b}, \code{a*b}
 \end{itemize}
\end{frame}




\begin{frame}[fragile]{ModÃ¨les linÃ©aires}

<<rcode=TRUE, eval = FALSE, tidy = FALSE>>=
# importer 'admit.txt'
admit <- read.table("admit.txt", header = TRUE)

# est-ce que gpa et rank sont reliÃ©s Ã  gre
fit <- lm(gre ~ gpa+rank, data = admit)

# voir les rÃ©sultats
summary(fit)
@

\end{frame}


\begin{frame}[fragile]{GLM}

<<rcode=TRUE, eval = FALSE, tidy = FALSE>>=
# rÃ©gression logistique
fit.glm <- glm(admit ~ gre+gpa+rank, data = admit, 
           family = binomial(link = "logit"))

# voir les rÃ©sultats
summary(fit.glm)
@

\end{frame}




\subsection{Sommaire}

\begin{frame}
 \begin{center}
  \Huge{\textcolor{red}{Sommaire}}
 \end{center}
\end{frame}




\begin{frame}{Sommaire des commandes de statistiques}
 %\hspace*{-1.9cm}\parbox[t]{\textwidth}{
\begin{tikzpicture}
\node (expr) [startstop] {\code{mean()}
\code{var()}\textcolor{pinkish}{texxxxxx}
\code{sd()}\textcolor{pinkish}{texxxx} 
\code{min()}\textcolor{pinkish}{texxxx}
\code{max()}\textcolor{pinkish}{texxxx}
\code{median()}\textcolor{pinkish}{texxxx}
\code{apply()}\textcolor{pinkish}{texxxx}};
\node (fat) [startstop2, below of=expr, xshift=-.3cm, yshift=-2.0cm] {\code{aov()}
\code{t.test()}\textcolor{background}{textttt}
\code{chisq.test()}\textcolor{background}{textttt}};
\node (script) [startstop3, below of=fat, xshift=.1cm, yshift=-1.5cm] {\code{lm()}
\code{glm()}\textcolor{beige}{textdddttt}}; 
\draw[decoration={brace,raise=5pt, amplitude=10pt},decorate,line width=1pt] 
  ([yshift=-1pt]expr.south west) -- ([yshift=1pt]expr.north west) node [black,midway,xshift=-3.6cm] 
{\footnotesize Fonctions pour des statistiques descriptives};
\draw[decoration={brace,raise=5pt,amplitude=10pt},decorate,line width=1pt] 
  ([yshift=-1pt]fat.south west) -- ([yshift=1pt]fat.north west) node [black,midway,xshift=-2.1cm] 
{\footnotesize Tests statistiques};
\draw[decoration={brace,raise=5pt,amplitude=10pt},decorate,line width=1pt] 
  ([yshift=-1pt]script.south west) -- ([yshift=1pt]script.north west) node [black,midway,xshift=-3.4cm] 
{\footnotesize Fonctions pour les modÃ¨les de rÃ©gression};
\end{tikzpicture}
%}
\end{frame}



\section{5. Reproducible Reports}

\setbeamercolor{normal text}{fg=gray,bg=black}
\begin{frame}[plain]
\hspace*{-1.0cm}\parbox[t]{\textwidth}{
 \begin{center}
  \Huge{\textcolor{white}{5. Cr\'{e}er des rapports}}
 \end{center}
 }
\end{frame}

\setbeamercolor{normal text}{fg=gray,bg=white}
\subsection{Introduction}

\begin{frame}
 \begin{center}
  \Huge{\textcolor{red}{Introduction}}
 \end{center}
\end{frame}


\begin{frame}{Introduction}
\begin{itemize}
\item \href{http://rmarkdown.rstudio.com/}{http://rmarkdown.rstudio.com/}
\item \href{http://shiny.rstudio.com/gallery/}{http://shiny.rstudio.com/gallery/}
\end{itemize}
\end{frame}





\begin{frame}[fragile]{Session Information}
<<results='asis', eval = TRUE, echo = FALSE, size='footnotesize'>>=
toLatex(sessionInfo(),locale = FALSE)
@

\end{frame}













\end{document}